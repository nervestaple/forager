[{"/Users/jmcgee/Projects/forager/forager-client/src/reportWebVitals.ts":"1","/Users/jmcgee/Projects/forager/forager-client/src/@core/AssetLoader.tsx":"2","/Users/jmcgee/Projects/forager/forager-client/src/scenes/OtherScene.tsx":"3","/Users/jmcgee/Projects/forager/forager-client/src/scenes/OfficeScene.tsx":"4","/Users/jmcgee/Projects/forager/forager-client/src/@core/Scene.tsx":"5","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGame.ts":"6","/Users/jmcgee/Projects/forager/forager-client/src/@core/HtmlOverlay.tsx":"7","/Users/jmcgee/Projects/forager/forager-client/src/@core/Collider.tsx":"8","/Users/jmcgee/Projects/forager/forager-client/src/@core/Sprite.tsx":"9","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObjectStore.tsx":"10","/Users/jmcgee/Projects/forager/forager-client/src/entities/Workstation.tsx":"11","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObject.ts":"12","/Users/jmcgee/Projects/forager/forager-client/src/@core/useForceUpdate.ts":"13","/Users/jmcgee/Projects/forager/forager-client/src/@core/useInteraction.ts":"14","/Users/jmcgee/Projects/forager/forager-client/src/@core/Sound.tsx":"15","/Users/jmcgee/Projects/forager/forager-client/src/components/PlayerScript.tsx":"16","/Users/jmcgee/Projects/forager/forager-client/src/@core/useCollisionTest.ts":"17","/Users/jmcgee/Projects/forager/forager-client/src/@core/usePointer.ts":"18","/Users/jmcgee/Projects/forager/forager-client/src/components/PlayerPathOverlay.tsx":"19","/Users/jmcgee/Projects/forager/forager-client/src/@core/useInteractableTest.ts":"20","/Users/jmcgee/Projects/forager/forager-client/src/@core/Graphic.tsx":"21","/Users/jmcgee/Projects/forager/forager-client/src/index.tsx":"22","/Users/jmcgee/Projects/forager/forager-client/src/soundData.ts":"23","/Users/jmcgee/Projects/forager/forager-client/src/@core/useWindowSize.ts":"24","/Users/jmcgee/Projects/forager/forager-client/src/@core/Game.tsx":"25","/Users/jmcgee/Projects/forager/forager-client/src/@core/SceneManager.tsx":"26","/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/waitForMs.ts":"27","/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/mapUtils.ts":"28","/Users/jmcgee/Projects/forager/forager-client/src/@core/TileMap.tsx":"29","/Users/jmcgee/Projects/forager/forager-client/src/@core/ScenePortal.tsx":"30","/Users/jmcgee/Projects/forager/forager-client/src/entities/Player.tsx":"31","/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/tileUtils.ts":"32","/Users/jmcgee/Projects/forager/forager-client/src/components/CameraFollowScript.tsx":"33","/Users/jmcgee/Projects/forager/forager-client/src/@core/useKeyActions.ts":"34","/Users/jmcgee/Projects/forager/forager-client/src/@core/useKeyPress.ts":"35","/Users/jmcgee/Projects/forager/forager-client/src/@core/useMapSnapshot.ts":"36","/Users/jmcgee/Projects/forager/forager-client/src/@core/useStateFromProp.ts":"37","/Users/jmcgee/Projects/forager/forager-client/src/@core/Interactable.tsx":"38","/Users/jmcgee/Projects/forager/forager-client/src/entities/PizzaPickup.tsx":"39","/Users/jmcgee/Projects/forager/forager-client/src/@core/useComponentRegistry.ts":"40","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObjectEvent.ts":"41","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameLoop.ts":"42","/Users/jmcgee/Projects/forager/forager-client/src/@core/usePathfinding.ts":"43","/Users/jmcgee/Projects/forager/forager-client/src/@core/useSceneManager.ts":"44","/Users/jmcgee/Projects/forager/forager-client/src/entities/CoffeeMachine.tsx":"45","/Users/jmcgee/Projects/forager/forager-client/src/@core/Moveable.tsx":"46","/Users/jmcgee/Projects/forager/forager-client/src/spriteData.ts":"47","/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/createPubSub.ts":"48","/Users/jmcgee/Projects/forager/forager-client/src/entities/Plant.tsx":"49","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameEvent.ts":"50","/Users/jmcgee/Projects/forager/forager-client/src/@core/usePointerClick.ts":"51","/Users/jmcgee/Projects/forager/forager-client/src/@core/GameObject.tsx":"52","/Users/jmcgee/Projects/forager/forager-client/src/@core/useAsset.ts":"53","/Users/jmcgee/Projects/forager/forager-client/src/App.tsx":"54","/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/findPath.ts":"55","/Users/jmcgee/Projects/forager/forager-client/src/components/CharacterScript.tsx":"56"},{"size":425,"mtime":1606862227165,"results":"57","hashOfConfig":"58"},{"size":3731,"mtime":1607059640154,"results":"59","hashOfConfig":"58"},{"size":1582,"mtime":1606882548648,"results":"60","hashOfConfig":"58"},{"size":2654,"mtime":1607209369999,"results":"61","hashOfConfig":"58"},{"size":4093,"mtime":1607061982713,"results":"62","hashOfConfig":"58"},{"size":185,"mtime":1606882548645,"results":"63","hashOfConfig":"58"},{"size":642,"mtime":1607061487374,"results":"64","hashOfConfig":"58"},{"size":2822,"mtime":1606882548644,"results":"65","hashOfConfig":"58"},{"size":1776,"mtime":1607223717286,"results":"66","hashOfConfig":"58"},{"size":3352,"mtime":1607208337535,"results":"67","hashOfConfig":"58"},{"size":1190,"mtime":1606882548648,"results":"68","hashOfConfig":"58"},{"size":221,"mtime":1606882548645,"results":"69","hashOfConfig":"70"},{"size":176,"mtime":1606882548645,"results":"71","hashOfConfig":"58"},{"size":318,"mtime":1606882548645,"results":"72","hashOfConfig":"58"},{"size":1925,"mtime":1607059692868,"results":"73","hashOfConfig":"58"},{"size":3158,"mtime":1607225084622,"results":"74","hashOfConfig":"58"},{"size":1597,"mtime":1606882548645,"results":"75","hashOfConfig":"58"},{"size":940,"mtime":1606882548645,"results":"76","hashOfConfig":"58"},{"size":2263,"mtime":1607209345398,"results":"77","hashOfConfig":"58"},{"size":773,"mtime":1606882548645,"results":"78","hashOfConfig":"58"},{"size":4725,"mtime":1607223532550,"results":"79","hashOfConfig":"58"},{"size":507,"mtime":1606886000521,"results":"80","hashOfConfig":"81"},{"size":502,"mtime":1606886014901,"results":"82","hashOfConfig":"58"},{"size":424,"mtime":1606882548645,"results":"83","hashOfConfig":"58"},{"size":5506,"mtime":1607208356853,"results":"84","hashOfConfig":"58"},{"size":3436,"mtime":1607208302002,"results":"85","hashOfConfig":"58"},{"size":125,"mtime":1606882548648,"results":"86","hashOfConfig":"58"},{"size":1890,"mtime":1607209074463,"results":"87","hashOfConfig":"58"},{"size":1264,"mtime":1607209700123,"results":"88","hashOfConfig":"58"},{"size":3199,"mtime":1607208796312,"results":"89","hashOfConfig":"58"},{"size":888,"mtime":1607224616247,"results":"90","hashOfConfig":"58"},{"size":4387,"mtime":1606882548648,"results":"91","hashOfConfig":"58"},{"size":3792,"mtime":1607209105207,"results":"92","hashOfConfig":"58"},{"size":792,"mtime":1606882548645,"results":"93","hashOfConfig":"58"},{"size":1321,"mtime":1606882548645,"results":"94","hashOfConfig":"58"},{"size":1212,"mtime":1606882548645,"results":"95","hashOfConfig":"81"},{"size":416,"mtime":1606882548645,"results":"96","hashOfConfig":"81"},{"size":2429,"mtime":1606882548644,"results":"97","hashOfConfig":"81"},{"size":1081,"mtime":1606882548648,"results":"98","hashOfConfig":"58"},{"size":868,"mtime":1606882548645,"results":"99","hashOfConfig":"81"},{"size":679,"mtime":1607207666613,"results":"100","hashOfConfig":"58"},{"size":739,"mtime":1606882548645,"results":"101","hashOfConfig":"58"},{"size":630,"mtime":1606882548645,"results":"102","hashOfConfig":"58"},{"size":259,"mtime":1607208031698,"results":"103","hashOfConfig":"58"},{"size":1165,"mtime":1606882548648,"results":"104","hashOfConfig":"58"},{"size":4705,"mtime":1607211416913,"results":"105","hashOfConfig":"58"},{"size":1132,"mtime":1607223355558,"results":"106","hashOfConfig":"58"},{"size":1471,"mtime":1606882548645,"results":"107","hashOfConfig":"58"},{"size":483,"mtime":1606882548648,"results":"108","hashOfConfig":"58"},{"size":642,"mtime":1607061146076,"results":"109","hashOfConfig":"58"},{"size":615,"mtime":1606882548645,"results":"110","hashOfConfig":"58"},{"size":4898,"mtime":1607061415808,"results":"111","hashOfConfig":"58"},{"size":603,"mtime":1607207639007,"results":"112","hashOfConfig":"58"},{"size":1177,"mtime":1607223589169,"results":"113","hashOfConfig":"58"},{"size":769,"mtime":1607208937246,"results":"114","hashOfConfig":"58"},{"size":5121,"mtime":1607225736532,"results":"115","hashOfConfig":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},"9g06iz",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kgfnal",{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"119"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"119"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"144"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xkzy17",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"144"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"119"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"119"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"119"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jmcgee/Projects/forager/forager-client/src/reportWebVitals.ts",["252"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/AssetLoader.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/scenes/OtherScene.tsx",["253"],"/Users/jmcgee/Projects/forager/forager-client/src/scenes/OfficeScene.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/Scene.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useGame.ts",["254"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/HtmlOverlay.tsx",[],[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/Collider.tsx",["255"],"import { Dispatch, SetStateAction, useState, useRef } from 'react';\nimport { GameObjectRef, Position } from './GameObject';\nimport {\n  CannotMoveEvent,\n  DidChangePositionEvent,\n  MoveDirection,\n} from './Moveable';\nimport useComponentRegistry, { ComponentRef } from './useComponentRegistry';\nimport useGame from './useGame';\nimport useGameObject from './useGameObject';\nimport useGameObjectEvent from './useGameObjectEvent';\nimport { PubSubEvent } from './utils/createPubSub';\n\nexport type CollisionCallback = (obj: GameObjectRef) => void;\nexport type CollisionEvent = PubSubEvent<'collision', GameObjectRef>;\nexport type TriggerEvent = PubSubEvent<'trigger', GameObjectRef>;\nexport type TriggerExitEvent = PubSubEvent<'trigger-exit', GameObjectRef>;\n\nexport type ColliderRef = ComponentRef<\n  'Collider',\n  {\n    walkable: boolean;\n    setWalkable: Dispatch<SetStateAction<boolean>>;\n    canCrossEdge: (position: Position, direction: MoveDirection) => boolean;\n    onCollision: (ref: GameObjectRef) => void;\n    onTrigger: (ref: GameObjectRef) => void;\n    onTriggerExit: (ref: GameObjectRef) => void;\n  }\n>;\n\ninterface Props {\n  isTrigger?: boolean;\n}\n\nexport default function Collider({ isTrigger = false }: Props) {\n  const { findGameObjectsByXY } = useGame();\n  const { id, getRef, publish, transform } = useGameObject();\n  const [walkable, setWalkable] = useState(isTrigger);\n  const prevPosition = useRef<Position>(transform);\n\n  useGameObjectEvent<CannotMoveEvent>('cannot-move', ({ x, y }) => {\n    findGameObjectsByXY(x, y)\n      .map((obj) => obj.getComponent<ColliderRef>('Collider'))\n      .forEach((collider) => collider?.onCollision(getRef()));\n  });\n\n  useGameObjectEvent<DidChangePositionEvent>(\n    'did-change-position',\n    ({ x, y }) => {\n      findGameObjectsByXY(x, y)\n        .filter((obj) => obj.id !== id) // skip self\n        .map((obj) => obj.getComponent<ColliderRef>('Collider'))\n        .forEach((collider) => collider?.onTrigger(getRef()));\n    },\n  );\n\n  useGameObjectEvent<DidChangePositionEvent>(\n    'did-change-position',\n    (nextPosition) => {\n      const { x, y } = prevPosition.current;\n      findGameObjectsByXY(x, y)\n        .filter((obj) => obj.id !== id) // skip self\n        .map((obj) => obj.getComponent<ColliderRef>('Collider'))\n        .forEach((collider) => collider?.onTriggerExit(getRef()));\n      prevPosition.current = nextPosition;\n    },\n  );\n\n  useComponentRegistry<ColliderRef>('Collider', {\n    walkable,\n    setWalkable,\n    // deprecated, not in use\n    canCrossEdge() {\n      return true;\n    },\n    onCollision(ref) {\n      publish<CollisionEvent>('collision', ref);\n    },\n    onTrigger(ref) {\n      publish<TriggerEvent>('trigger', ref);\n    },\n    onTriggerExit(ref) {\n      publish<TriggerExitEvent>('trigger-exit', ref);\n    },\n  });\n\n  return null;\n}\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/Sprite.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObjectStore.tsx",["256","257","258","259"],"/Users/jmcgee/Projects/forager/forager-client/src/entities/Workstation.tsx",["260"],"import React, { useRef } from 'react';\nimport Collider from '../@core/Collider';\nimport GameObject, { GameObjectProps } from '../@core/GameObject';\nimport Interactable, { InteractionEvent } from '../@core/Interactable';\nimport Sprite, { SpriteRef } from '../@core/Sprite';\nimport useGameObject from '../@core/useGameObject';\nimport useGameObjectEvent from '../@core/useGameObjectEvent';\nimport waitForMs from '../@core/utils/waitForMs';\nimport spriteData from '../spriteData';\n\nfunction WorkstationScript() {\n  const { getComponent } = useGameObject();\n  const workState = useRef(false);\n\n  useGameObjectEvent<InteractionEvent>('interaction', () => {\n    workState.current = !workState.current;\n\n    if (workState.current) {\n      getComponent<SpriteRef>('Sprite').setState('workstation-2');\n    } else {\n      getComponent<SpriteRef>('Sprite').setState('workstation-1');\n    }\n\n    return waitForMs(400);\n  });\n\n  return null;\n}\n\nexport default function Workstation(props: GameObjectProps) {\n  return (\n    <GameObject {...props}>\n      <Sprite {...spriteData.objects} state=\"workstation-1\" />\n      <Collider />\n      <Interactable />\n      <WorkstationScript />\n    </GameObject>\n  );\n}\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObject.ts",["261"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useForceUpdate.ts",["262"],"import { useCallback, useState } from 'react';\n\nexport default function useForceUpdate() {\n  const [, setState] = useState({});\n  return useCallback(() => setState({}), []);\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/useInteraction.ts",["263"],"import { InteractionCallback, InteractionEvent } from './Interactable';\nimport useGameObjectEvent from './useGameObjectEvent';\n\n// this hook exists for legacy support\nexport default function useInteraction(callback: InteractionCallback) {\n  useGameObjectEvent<InteractionEvent>('interaction', callback, [callback]);\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/Sound.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/components/PlayerScript.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useCollisionTest.ts",["264"],"import { useCallback } from 'react';\nimport { ColliderRef } from './Collider';\nimport { Position } from './GameObject';\nimport useGame from './useGame';\nimport useGameObject from './useGameObject';\n\nexport interface CollisionTestOptions {\n  walkable?: boolean;\n  sight?: boolean;\n  hit?: boolean;\n}\n\nexport default function useCollisionTest({\n  sight = false,\n  hit = false,\n}: CollisionTestOptions = {}) {\n  const { findGameObjectsByXY } = useGame();\n  const { id } = useGameObject() || {}; // optional\n\n  return useCallback(\n    (position: Position) => {\n      const { x, y } = position;\n      const gameObjectsAtXY = findGameObjectsByXY(x, y);\n\n      // no object at position is considered out of bounds\n      if (!gameObjectsAtXY.length) return false;\n\n      return gameObjectsAtXY.every((gameObject) => {\n        // skip own collider\n        if (gameObject.id === id) return true;\n\n        const collider = gameObject.getComponent<ColliderRef>('Collider');\n\n        if (sight) {\n          return (\n            gameObject.layer == null ||\n            (gameObject.layer !== 'wall' && gameObject.layer !== 'obstacle') ||\n            (collider && collider.walkable)\n          );\n        }\n        if (hit) {\n          return (\n            gameObject.layer == null ||\n            (gameObject.layer !== 'wall' &&\n              gameObject.layer !== 'visible-wall' &&\n              gameObject.layer !== 'obstacle') ||\n            (collider && collider.walkable)\n          );\n        }\n\n        return !collider || collider.walkable;\n      });\n    },\n    [id, findGameObjectsByXY, sight, hit],\n  );\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/usePointer.ts",["265"],"import { useRef, useState } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { Position } from './GameObject';\nimport useGameLoop from './useGameLoop';\n\nconst vector3 = new THREE.Vector3();\nconst getPointer = (mouse: THREE.Vector2, camera: THREE.Camera) => {\n  const { x, y } = vector3.set(mouse.x, mouse.y, 0.5).unproject(camera);\n  return { x: Math.round(x), y: Math.round(y) };\n};\n\nexport default function usePointer() {\n  const { camera, mouse } = useThree();\n  const [pointer, setPointer] = useState<Position>(() =>\n    getPointer(mouse, camera),\n  );\n  const prevPointer = useRef(pointer);\n\n  useGameLoop(() => {\n    const nextPointer = getPointer(mouse, camera);\n    if (\n      prevPointer.current.x === nextPointer.x &&\n      prevPointer.current.y === nextPointer.y\n    )\n      return;\n\n    setPointer(nextPointer);\n    prevPointer.current = nextPointer;\n  });\n\n  return pointer;\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/components/PlayerPathOverlay.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useInteractableTest.ts",["266"],"import { useCallback } from 'react';\nimport { Position } from './GameObject';\nimport { InteractableRef } from './Interactable';\nimport useGame from './useGame';\nimport useGameObject from './useGameObject';\n\nexport default function useInteractableTest() {\n  const { findGameObjectsByXY } = useGame();\n  const { id } = useGameObject() || {}; // optional\n\n  return useCallback(\n    (position: Position) => {\n      const { x, y } = position;\n\n      return findGameObjectsByXY(x, y).some((gameObject) => {\n        // skip own collider\n        if (gameObject.id === id) return false;\n\n        const interactable = gameObject.getComponent<InteractableRef>(\n          'Interactable',\n        );\n        return !!interactable;\n      });\n    },\n    [id, findGameObjectsByXY],\n  );\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/Graphic.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/index.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/soundData.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useWindowSize.ts",["267"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/Game.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/SceneManager.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/waitForMs.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/mapUtils.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/TileMap.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/ScenePortal.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/entities/Player.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/tileUtils.ts",["268"],"interface TileLike {\n  x: number;\n  y: number;\n}\n\nclass TileClass implements TileLike {\n  constructor(public x = 0, public y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static DIRECTIONS = [\n    new TileClass(0, 1),\n    new TileClass(1, 0),\n    new TileClass(0, -1),\n    new TileClass(-1, 0),\n  ];\n\n  static DIAGONALS = [\n    new TileClass(-1, 1),\n    new TileClass(1, 1),\n    new TileClass(1, -1),\n    new TileClass(-1, -1),\n  ];\n\n  static direction(index: number) {\n    return TileClass.DIRECTIONS[index];\n  }\n\n  static diagonal(index: number) {\n    return TileClass.DIAGONALS[index];\n  }\n\n  add(t: TileLike | number) {\n    if (typeof t === 'object') {\n      this.x += t.x;\n      this.y += t.y;\n    } else {\n      this.x += t;\n      this.y += t;\n    }\n    return this;\n  }\n\n  sub(t: TileLike | number) {\n    if (typeof t === 'object') {\n      this.x -= t.x;\n      this.y -= t.y;\n    } else {\n      this.x -= t;\n      this.y -= t;\n    }\n    return this;\n  }\n\n  scale(t: TileLike | number) {\n    if (typeof t === 'object') {\n      this.x *= t.x;\n      this.y *= t.y;\n    } else {\n      this.x *= t;\n      this.y *= t;\n    }\n    return this;\n  }\n\n  multiplyScalar(scalar: number) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  divideScalar(scalar: number) {\n    return this.multiplyScalar(1 / scalar);\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  equals(t: TileLike) {\n    return this.x === t?.x && this.y === t?.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n\n  squareDistance(t: TileLike) {\n    const dx = this.x - t.x;\n    const dy = this.y - t.y;\n    return dx * dx + dy * dy;\n  }\n\n  floatDistance(t: TileLike) {\n    return Math.sqrt(this.squareDistance(t));\n  }\n\n  angleRad(t: TileLike) {\n    return Math.atan2(t.y - this.y, t.x - this.x);\n  }\n\n  angleDeg(t: TileLike) {\n    return (this.angleRad(t) * 180) / Math.PI;\n  }\n\n  distance(t: TileLike) {\n    return Math.round(this.floatDistance(t));\n  }\n\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n\n  lerp(t: TileLike, n: number) {\n    this.x += (t.x - this.x) * n;\n    this.y += (t.y - this.y) * n;\n    return this;\n  }\n\n  neighbor(index: number) {\n    return this.clone().add(TileClass.direction(index));\n  }\n\n  diagonalNeighbor(index: number) {\n    return this.clone().add(TileClass.DIAGONALS[index]);\n  }\n\n  rangeNeighbors(rangeX: number, rangeY = rangeX) {\n    const results: TileClass[] = [];\n    for (let y = -rangeY; y <= rangeY; y += 1) {\n      for (let x = -rangeX; x <= rangeX; x += 1) {\n        results.push(new TileClass(x, y).add(this));\n      }\n    }\n    return results;\n  }\n\n  outerRangeNeighbors(rangeX: number, rangeY = rangeX) {\n    const results: TileClass[] = [];\n    for (let y = -rangeY; y <= rangeY; y += 1) {\n      for (let x = -rangeX; x <= rangeX; x += 1) {\n        if (x === -rangeX || x === rangeX || y === -rangeY || y === rangeY)\n          results.push(new TileClass(x, y).add(this));\n      }\n    }\n    return results;\n  }\n\n  ringNeighbors(radius: number) {\n    const results: TileClass[] = [];\n    let t = TileClass.diagonal(3).clone().scale(Math.round(radius)).add(this);\n    for (let i = 0; i < TileClass.DIRECTIONS.length; i += 1) {\n      for (let j = 0; j < radius * 2; j += 1) {\n        results.push(t);\n        t = t.neighbor(i);\n      }\n    }\n    return results;\n  }\n\n  lineTo(t: TileLike) {\n    const results: TileClass[] = [];\n    const precision = 1.5; // 1 appeared to be too low here\n    const probes = this.floatDistance(t) * precision;\n    const step = 1 / Math.max(probes, 1);\n    for (let i = 0; i <= probes; i += 1) {\n      const newTile = this.clone()\n        .lerp(t, step * i)\n        .round();\n      if (results.some((tile) => tile.equals(newTile))) continue;\n      results.push(newTile);\n    }\n    return results;\n  }\n\n  clone() {\n    return new TileClass(this.x, this.y);\n  }\n\n  toString() {\n    return `[${this.x}, ${this.y}]`;\n  }\n\n  fromString(string: string) {\n    const [x, y] = string.slice(1, -1).split(', ').map(Number);\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  toArray() {\n    return [this.x, this.y];\n  }\n}\n\nexport type TileUtil = TileClass;\n\nexport default function tileUtils(from: TileLike = { x: 0, y: 0 }) {\n  return new TileClass(from.x, from.y);\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/components/CameraFollowScript.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useKeyActions.ts",["269"],"import { useCallback, useEffect, useRef } from 'react';\nimport useGame from './useGame';\n\nexport default function useKeyActions(\n  keyMap: {\n    [key: string]: (e: KeyboardEvent) => void;\n  },\n  enabledWhenPaused = false,\n) {\n  const map = useRef(keyMap);\n  const { paused } = useGame() || {}; // optional\n  map.current = keyMap;\n\n  const handleKey = useCallback(\n    (event: KeyboardEvent) => {\n      if (paused && !enabledWhenPaused) return;\n      Object.entries(map.current).forEach(([key, handler]) => {\n        if (key === event.key) {\n          handler(event);\n        }\n      });\n    },\n    [paused, enabledWhenPaused],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKey);\n    return () => window.removeEventListener('keydown', handleKey);\n  }, [handleKey]);\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/useKeyPress.ts",["270"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useMapSnapshot.ts",["271"],"import { useCallback } from 'react';\nimport { Position } from './GameObject';\nimport useGame from './useGame';\nimport useInteractableTest from './useInteractableTest';\nimport useCollisionTest from './useCollisionTest';\n\nexport const WALKABLE = 0;\nexport const BLOCKED = 1;\n\nexport default function useMapSnapshot() {\n  const { mapSize } = useGame();\n  const testCollision = useCollisionTest();\n  const testInteractable = useInteractableTest();\n\n  return useCallback(\n    (destination?: Position) => {\n      const [mapWidth, mapHeight] = mapSize;\n      const snapshot: number[][] = [[]];\n      for (let y = 0; y < mapHeight; y += 1) {\n        snapshot[y] = snapshot[y] || [];\n        for (let x = 0; x < mapWidth; x += 1) {\n          snapshot[y][x] = testCollision({ x, y }) ? WALKABLE : BLOCKED;\n          // allow destination to be walkable, if it is interactable\n          if (destination != null) {\n            if (x === destination.x && y === destination.y) {\n              snapshot[y][x] = testInteractable({ x, y })\n                ? WALKABLE\n                : snapshot[y][x];\n            }\n          }\n        }\n      }\n      return snapshot;\n    },\n    [testCollision, testInteractable, mapSize],\n  );\n}\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useStateFromProp.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/Interactable.tsx",["272","273"],"import { useRef } from 'react';\nimport useComponentRegistry, { ComponentRef } from './useComponentRegistry';\nimport useGame from './useGame';\nimport useGameObject from './useGameObject';\nimport { GameObjectRef, Position } from './GameObject';\nimport { PubSubEvent } from './utils/createPubSub';\n\nexport type WillInteractEvent = PubSubEvent<'will-interact', Position>;\nexport type InteractionEvent = PubSubEvent<'interaction', GameObjectRef>;\nexport type DidInteractEvent = PubSubEvent<'did-interact', Position>;\n\nexport type InteractionCallback = (obj: GameObjectRef) => Promise<any> | void;\n\nexport type InteractableRef = ComponentRef<\n  'Interactable',\n  {\n    interact: (position: Position) => Promise<boolean>;\n    onInteract: (ref: GameObjectRef) => Promise<void>;\n    canInteract: () => boolean;\n    canReceiveInteraction: () => boolean;\n  }\n>;\n\nexport default function Interactable() {\n  const { findGameObjectsByXY } = useGame();\n  const { getRef, publish, hasSubscriptions } = useGameObject();\n  const canInteract = useRef(true);\n\n  useComponentRegistry<InteractableRef>('Interactable', {\n    // this is executed on the game object that *initiates* an interaction\n    async interact({ x, y }) {\n      const interactables = findGameObjectsByXY(x, y)\n        .map((obj) => obj.getComponent<InteractableRef>('Interactable'))\n        .filter((component) => component?.canReceiveInteraction());\n\n      if (!interactables.length) return false;\n\n      publish<WillInteractEvent>('will-interact', { x, y });\n      canInteract.current = false;\n      await Promise.all(interactables.map((comp) => comp.onInteract(getRef())));\n      canInteract.current = true;\n      publish<DidInteractEvent>('did-interact', { x, y });\n      return true;\n    },\n    // this is executed on the game object that *receives* an interaction\n    async onInteract(gameObject) {\n      if (canInteract.current) {\n        canInteract.current = false;\n        publish<WillInteractEvent>('will-interact', gameObject.transform);\n        await publish<InteractionEvent>('interaction', gameObject);\n        publish<DidInteractEvent>('did-interact', gameObject.transform);\n        canInteract.current = true;\n      }\n    },\n    canInteract() {\n      return canInteract.current;\n    },\n    canReceiveInteraction() {\n      return (\n        canInteract.current &&\n        hasSubscriptions<InteractionEvent>('interaction') > 0\n      );\n    },\n  });\n\n  return null;\n}\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/entities/PizzaPickup.tsx",["274"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useComponentRegistry.ts",["275","276"],"import { useLayoutEffect } from 'react';\nimport useGameObject from './useGameObject';\n\nexport interface ComponentRef<ComponentName = string, Api = any> {\n  name: ComponentName;\n  api: Readonly<Api>;\n}\n\nexport interface ComponentRegistryUtils {\n  registerComponent: <T extends ComponentRef>(\n    name: T['name'],\n    api: T['api'],\n  ) => void;\n  unregisterComponent: <T extends ComponentRef>(name: T['name']) => void;\n  getComponent: <T extends ComponentRef>(name: T['name']) => T['api'];\n}\n\nexport default function useComponentRegistry<T extends ComponentRef>(\n  name: T['name'],\n  api: T['api'],\n) {\n  const { registerComponent, unregisterComponent } = useGameObject();\n\n  useLayoutEffect(() => {\n    registerComponent<T>(name, api);\n  });\n\n  useLayoutEffect(() => {\n    return () => unregisterComponent<T>(name);\n  }, [unregisterComponent, name]);\n\n  return api;\n}\n",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameObjectEvent.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameLoop.ts",["277"],"import { useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport useGame from './useGame';\nimport useGameObject from './useGameObject';\n\nexport default function useGameLoop(\n  callback: FrameRequestCallback,\n  condition = true,\n) {\n  const { paused } = useGame();\n  const { getRef } = useGameObject() || {}; // optional\n  const active = useRef(false);\n  const callbackRef = useRef<FrameRequestCallback>();\n  callbackRef.current = callback;\n  active.current = !paused && condition;\n  if (getRef && getRef().disabled) active.current = false;\n\n  useFrame(({ clock }) => {\n    const time = clock.oldTime; // clock.elapsedTime / 1000;\n\n    if (active.current) {\n      callback(time);\n    }\n  });\n\n  return active.current;\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/usePathfinding.ts",["278"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useSceneManager.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/entities/CoffeeMachine.tsx",["279"],"import React, { useRef } from 'react';\nimport Collider from '../@core/Collider';\nimport GameObject, { GameObjectProps } from '../@core/GameObject';\nimport Interactable, { InteractionEvent } from '../@core/Interactable';\nimport { useSound } from '../@core/Sound';\nimport Sprite, { SpriteRef } from '../@core/Sprite';\nimport useGameObject from '../@core/useGameObject';\nimport useGameObjectEvent from '../@core/useGameObjectEvent';\nimport soundData from '../soundData';\nimport spriteData from '../spriteData';\n\nfunction CoffeeScript() {\n  const { getComponent } = useGameObject();\n  const fillState = useRef(true);\n  const playSfx = useSound(soundData.drinking);\n\n  useGameObjectEvent<InteractionEvent>('interaction', () => {\n    if (fillState.current) {\n      fillState.current = false;\n      getComponent<SpriteRef>('Sprite').setState('coffee-machine-empty');\n      playSfx();\n    }\n  });\n\n  return null;\n}\n\nexport default function CoffeeMachine(props: GameObjectProps) {\n  return (\n    <GameObject {...props}>\n      <Sprite {...spriteData.objects} state=\"coffee-machine\" />\n      <Collider />\n      <Interactable />\n      <CoffeeScript />\n    </GameObject>\n  );\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/Moveable.tsx",["280"],"/Users/jmcgee/Projects/forager/forager-client/src/spriteData.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/createPubSub.ts",["281","282","283","284"],"/Users/jmcgee/Projects/forager/forager-client/src/entities/Plant.tsx",["285"],"import React from 'react';\nimport Collider from '../@core/Collider';\nimport GameObject, { GameObjectProps } from '../@core/GameObject';\nimport Sprite from '../@core/Sprite';\nimport spriteData from '../spriteData';\n\nexport default function Plant(props: GameObjectProps) {\n  return (\n    <GameObject layer=\"obstacle\" {...props}>\n      <Collider />\n      <Sprite\n        {...spriteData.objects}\n        state=\"plant\"\n        offset={{ x: 0, y: 0.25 }}\n      />\n    </GameObject>\n  );\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/useGameEvent.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/usePointerClick.ts",["286"],"import { useEffect } from 'react';\nimport { useThree } from 'react-three-fiber';\nimport useGame from './useGame';\n\nexport default function usePointerClick(\n  clickCallback: (event: PointerEvent) => void,\n) {\n  const {\n    gl: { domElement },\n  } = useThree();\n  const { paused } = useGame();\n\n  useEffect(() => {\n    function handleClick(event: PointerEvent) {\n      if (paused) return;\n      clickCallback(event);\n    }\n    domElement.addEventListener('pointerup', handleClick);\n    return () => {\n      domElement.removeEventListener('pointerup', handleClick);\n    };\n  }, [paused, clickCallback, domElement]);\n}\n","/Users/jmcgee/Projects/forager/forager-client/src/@core/GameObject.tsx",["287"],"/Users/jmcgee/Projects/forager/forager-client/src/@core/useAsset.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/App.tsx",[],"/Users/jmcgee/Projects/forager/forager-client/src/@core/utils/findPath.ts",[],"/Users/jmcgee/Projects/forager/forager-client/src/components/CharacterScript.tsx",[],{"ruleId":"288","severity":1,"message":"289","line":3,"column":25,"nodeType":"290","messageId":"291","endLine":3,"endColumn":57},{"ruleId":"288","severity":1,"message":"289","line":43,"column":16,"nodeType":"292","messageId":"291","endLine":43,"endColumn":37},{"ruleId":"288","severity":1,"message":"289","line":4,"column":16,"nodeType":"292","messageId":"291","endLine":4,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":35,"column":16,"nodeType":"292","messageId":"291","endLine":35,"endColumn":63},{"ruleId":"293","severity":1,"message":"294","line":14,"column":30,"nodeType":"295","messageId":"296","endLine":14,"endColumn":33,"suggestions":"297"},{"ruleId":"293","severity":1,"message":"294","line":15,"column":33,"nodeType":"295","messageId":"296","endLine":15,"endColumn":36,"suggestions":"298"},{"ruleId":"293","severity":1,"message":"294","line":20,"column":48,"nodeType":"295","messageId":"296","endLine":20,"endColumn":51,"suggestions":"299"},{"ruleId":"293","severity":1,"message":"294","line":78,"column":45,"nodeType":"295","messageId":"296","endLine":78,"endColumn":48,"suggestions":"300"},{"ruleId":"288","severity":1,"message":"289","line":30,"column":16,"nodeType":"292","messageId":"291","endLine":30,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":4,"column":16,"nodeType":"292","messageId":"291","endLine":4,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":3,"column":16,"nodeType":"292","messageId":"291","endLine":3,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":5,"column":16,"nodeType":"292","messageId":"291","endLine":5,"endColumn":70},{"ruleId":"288","severity":1,"message":"289","line":13,"column":16,"nodeType":"292","messageId":"291","endLine":16,"endColumn":30},{"ruleId":"288","severity":1,"message":"289","line":13,"column":16,"nodeType":"292","messageId":"291","endLine":13,"endColumn":37},{"ruleId":"288","severity":1,"message":"289","line":7,"column":16,"nodeType":"292","messageId":"291","endLine":7,"endColumn":46},{"ruleId":"288","severity":1,"message":"289","line":3,"column":16,"nodeType":"292","messageId":"291","endLine":3,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":206,"column":16,"nodeType":"292","messageId":"291","endLine":206,"endColumn":67},{"ruleId":"288","severity":1,"message":"289","line":4,"column":16,"nodeType":"292","messageId":"291","endLine":9,"endColumn":2},{"ruleId":"288","severity":1,"message":"289","line":4,"column":16,"nodeType":"292","messageId":"291","endLine":4,"endColumn":60},{"ruleId":"288","severity":1,"message":"289","line":10,"column":16,"nodeType":"292","messageId":"291","endLine":10,"endColumn":41},{"ruleId":"293","severity":1,"message":"294","line":12,"column":67,"nodeType":"295","messageId":"296","endLine":12,"endColumn":70,"suggestions":"301"},{"ruleId":"288","severity":1,"message":"289","line":24,"column":16,"nodeType":"292","messageId":"291","endLine":24,"endColumn":39},{"ruleId":"288","severity":1,"message":"289","line":25,"column":16,"nodeType":"292","messageId":"291","endLine":25,"endColumn":60},{"ruleId":"293","severity":1,"message":"294","line":4,"column":61,"nodeType":"295","messageId":"296","endLine":4,"endColumn":64,"suggestions":"302"},{"ruleId":"288","severity":1,"message":"289","line":18,"column":16,"nodeType":"292","messageId":"291","endLine":21,"endColumn":2},{"ruleId":"288","severity":1,"message":"289","line":6,"column":16,"nodeType":"292","messageId":"291","endLine":9,"endColumn":2},{"ruleId":"288","severity":1,"message":"289","line":12,"column":16,"nodeType":"292","messageId":"291","endLine":12,"endColumn":41},{"ruleId":"288","severity":1,"message":"289","line":28,"column":16,"nodeType":"292","messageId":"291","endLine":28,"endColumn":62},{"ruleId":"293","severity":1,"message":"294","line":40,"column":49,"nodeType":"295","messageId":"296","endLine":40,"endColumn":52,"suggestions":"303"},{"ruleId":"293","severity":1,"message":"294","line":1,"column":57,"nodeType":"295","messageId":"296","endLine":1,"endColumn":60,"suggestions":"304"},{"ruleId":"293","severity":1,"message":"294","line":6,"column":31,"nodeType":"295","messageId":"296","endLine":6,"endColumn":34,"suggestions":"305"},{"ruleId":"293","severity":1,"message":"294","line":6,"column":66,"nodeType":"295","messageId":"296","endLine":6,"endColumn":69,"suggestions":"306"},{"ruleId":"288","severity":1,"message":"289","line":8,"column":16,"nodeType":"292","messageId":"291","endLine":8,"endColumn":39},{"ruleId":"288","severity":1,"message":"289","line":7,"column":16,"nodeType":"292","messageId":"291","endLine":7,"endColumn":54},{"ruleId":"288","severity":1,"message":"289","line":5,"column":16,"nodeType":"292","messageId":"291","endLine":7,"endColumn":2},{"ruleId":"293","severity":1,"message":"294","line":109,"column":53,"nodeType":"295","messageId":"296","endLine":109,"endColumn":56,"suggestions":"307"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],["324","325"],["326","327"],["328","329"],{"messageId":"330","fix":"331","desc":"332"},{"messageId":"333","fix":"334","desc":"335"},{"messageId":"330","fix":"336","desc":"332"},{"messageId":"333","fix":"337","desc":"335"},{"messageId":"330","fix":"338","desc":"332"},{"messageId":"333","fix":"339","desc":"335"},{"messageId":"330","fix":"340","desc":"332"},{"messageId":"333","fix":"341","desc":"335"},{"messageId":"330","fix":"342","desc":"332"},{"messageId":"333","fix":"343","desc":"335"},{"messageId":"330","fix":"344","desc":"332"},{"messageId":"333","fix":"345","desc":"335"},{"messageId":"330","fix":"346","desc":"332"},{"messageId":"333","fix":"347","desc":"335"},{"messageId":"330","fix":"348","desc":"332"},{"messageId":"333","fix":"349","desc":"335"},{"messageId":"330","fix":"350","desc":"332"},{"messageId":"333","fix":"351","desc":"335"},{"messageId":"330","fix":"352","desc":"332"},{"messageId":"333","fix":"353","desc":"335"},{"messageId":"330","fix":"354","desc":"332"},{"messageId":"333","fix":"355","desc":"335"},"suggestUnknown",{"range":"356","text":"357"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"356","text":"358"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"359","text":"357"},{"range":"359","text":"358"},{"range":"360","text":"357"},{"range":"360","text":"358"},{"range":"361","text":"357"},{"range":"361","text":"358"},{"range":"362","text":"357"},{"range":"362","text":"358"},{"range":"363","text":"357"},{"range":"363","text":"358"},{"range":"364","text":"357"},{"range":"364","text":"358"},{"range":"365","text":"357"},{"range":"365","text":"358"},{"range":"366","text":"357"},{"range":"366","text":"358"},{"range":"367","text":"357"},{"range":"367","text":"358"},{"range":"368","text":"357"},{"range":"368","text":"358"},[582,585],"unknown","never",[619,622],[765,768],[2207,2210],[579,582],[147,150],[1313,1316],[56,59],[129,132],[164,167],[2664,2667]]